name: Lint and Test

on:
  pull_request:

env:
  DATABASE_URL: postgres://postgres:password@localhost:5432/newsletter

jobs:
  cleanup:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        timeout-minutes: 3
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  format:
    runs-on: ubuntu-latest
    needs:
      - cleanup
    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: delete mold for CI
        run: |
          rm -f .cargo/config.toml

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  lint:
    runs-on: ubuntu-latest
    needs:
      - cleanup
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: delete mold for CI
        run: |
          rm -f .cargo/config.toml

      - name: migrate db
        run: |
          cargo install sqlx-cli --version=0.5.7 --no-default-features --features postgres
          sqlx database create
          sqlx migrate run

      - name: Run lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

  test:
    runs-on: ubuntu-latest
    needs:
      - cleanup
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: delete mold for CI
        run: |
          rm -f .cargo/config.toml
      
      - name: migrate db
        run: |
          cargo install sqlx-cli --version=0.5.7 --no-default-features --features postgres
          sqlx database create
          sqlx migrate run

      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test

  typo:
    runs-on: ubuntu-latest
    needs:
      - cleanup
    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Run typos
        uses: crate-ci/typos@v1.4.1